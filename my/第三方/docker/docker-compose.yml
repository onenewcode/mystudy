version: "3"
# 使用锚点和别名的功能减少依赖
# x-common-depends-on: &common-depends-on
#   - db
#   - redis
#   - nacos

# todo 可以确保服务处于正常状态，之后在进行连接
# depends_on:
#   postgres:
#         condition: service_healthy
services:
  db:
    image: mysql:8.0
    container_name: mysql_db # 容器名称
    environment:
      MYSQL_ROOT_PASSWORD: root # 初始化root密码
      MYSQL_DATABASE: todo #初始化数据名称
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql #初始化sql的目录
    networks:
      - work
    healthcheck: # 设置健康检查
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 30s
      retries: 3
  redis:
    image: redis:7.2.4
    ports:
      - "6379:6379"
    command: ["redis-server"]
    networks:
      - work
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
  nacos:
    image: nacos/nacos-server:latest
    container_name: nacos_container
    environment:
      - MODE=standalone
    ports:
      - "8848:8848"
    networks:
      - work
  # infile: # 项目目录
  #   image: registry.cn-hangzhou.aliyuncs.com/chat/infile:latest
  #   container_name: infile_container
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - work
  #   environment: # 添加必要的环境变量方便进行配置
  #     - "TZ=Asia/Shanghai"
  #     - "GOTP_DB_PSQL_HOST=postgres"
  #     - "GOTP_DB_PSQL_PORT=5432"
  #     - "GOTP_DB_PSQL_USERNAME=postgres"
  #     - "GOTP_DB_PSQL_PASSWORD=postgresThingsPanel"
  #     - "GOTP_DB_PSQL_DBNAME=ThingsPanel"
  #     - "GOTP_DB_PSQL_LOG_LEVEL=3"
  #     - "GOTP_DB_REDIS_ADDR=redis:6379"
  #     - "GOTP_DB_REDIS_PASSWORD=redis"
  #     - "GOTP_MQTT_SERVER=gmqtt"
  #     - "GOTP_MQTT_ACCESS_ADDRESS=gmqtt:1883"
  #     - "GOTP_MQTT_BROKER=gmqtt:1883"
  #     - "GOTP_LOG_LEVEL=error"  
    # depends_on:
    #   <<: *common-depends-on
networks:
  chat:
    external: false